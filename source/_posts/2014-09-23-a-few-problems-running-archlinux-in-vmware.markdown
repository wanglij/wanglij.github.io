---
layout: post
title: "A few problems running ArchLinux in VMware"
date: 2014-09-23 16:53:41 +0000
comments: true
categories: Tech 
---

I have installed ArchLinux, and the awesome window management system on top of it for a while, but there are still a couple of problems not solved yet. Basically, I sloved these two issues by following the instructions on the wiki page of [Installing Arch Linux in VMware](https://wiki.archlinux.org/index.php/Installing_Arch_Linux_in_VMware), but it's not update to date, so I have to do many trouble shootings to make it work finally, and updated the wiki page.

First, I installed both the official vmware tools and Open-VM-Tools. After installing the xf86-video-vmware and svga-dri (no idea which one is the culprit), my x window was screwed up. I noticed that it complains confiliction with xorg-server during installing. Finally the Xwrapper.config changes combed with xf86-video-vmware-git from the AUR got everything fixed. This trouble shooting was added to the wiki page.

### Resolution problem

When the awesome/X window was started, it always runs in the smallest resolution. 
We can run the xrandr command to change the resolution after the window is started
```
$ xrandr -s 1920x1200
```
But, usually, we hope the window will fit the resolution of our screen when it is started.
On the other hand, the resolution can only be changed to the mode available listed by the xrandr command.
```
[wanglij@~]$ xrandr
Screen 0: minimum 1 x 1, current 1920 x 1080, maximum 8192 x 8192
Virtual1 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 0mm x 0mm
   800x600       60.00 +  60.32  
   2560x1600     59.99  
   1920x1440     60.00  
   1856x1392     60.00  
   1792x1344     60.00  
   1920x1200     59.88  
   1600x1200     60.00  
   1680x1050     59.95  
   1400x1050     59.98  
   1280x1024     60.02  
   1440x900      59.89  
   1280x960      60.00  
   1360x768      60.02  
   1280x800      59.81  
   1152x864      75.00  
   1280x768      59.87  
   1024x768      60.00  
   640x480       59.94  
Virtual2 disconnected (normal left inverted right x axis y axis)
Virtual3 disconnected (normal left inverted right x axis y axis)
Virtual4 disconnected (normal left inverted right x axis y axis)
Virtual5 disconnected (normal left inverted right x axis y axis)
Virtual6 disconnected (normal left inverted right x axis y axis)
Virtual7 disconnected (normal left inverted right x axis y axis)
Virtual8 disconnected (normal left inverted right x axis y axis)
```
To fix this problem, we can follow the following steps:

1. Create an xorg.conf 
If there is no this file in /etc/X11/, create an xorg.conf by following the instructions [here](https://wiki.archlinux.org/index.php/xorg), otherwise just skip this step.

2. Run the gtf command to calculate the modeline:
For example, I want my window to be in the resolution of 1920x1080, then I got the modeline like below:
```
$ gtf 1920 1080 60
  # 1920x1080 @ 60.00 Hz (GTF) hsync: 67.08 kHz; pclk: 172.80 MHz
  Modeline "1920x1080_60.00"  172.80  1920 2040 2248 2576  1080 1081 1084 1118  -HSync +Vsync
```
3. Open the xorg.conf, and make the changes:
Find the "Monitor" Section, and add the following two lines:
```
Modeline	"1920x1080_60.00"  172.80  1920 2040 2248 2576  1080 1081 1084 1118
Option		"PreferredMode" "1920x1080_60.00"
```
Note that when we copy the Modeline generated by the gtf command above, we deleted the "-HSync +Vsync" part.
Go to the "Display" SubSection of the "Screen" Section, and add the following line
```
Modes		"1920x1080"
```

Now if you restart you awesome, it will be run in the resolution that you expected.

### Sharing Folders between host and guest

1. Share folders by selecting Edit virtual machine settings > Options > Shared Folders > Always enabled, and creating new shares. After doing this, we should be able to see the shared folders by running the following command:
For example, I created two shared folders, Documents and P4.
```
$ vmware-hgfsclient
Documents
P4
```

2. Add the vmhgfs module to mkinitcpio.conf
```
/etc/mkinitcpio.conf
MODULES="vsock vmw_vsock_vmci_transport vmw_balloon vmw_vmci vmwgfx vmhgfs"
```
Run:
```
$ sudo mkinitcpio -p linux
```

3. Add a rule in /etc/fstab for each share
Since I want the owner of folders to be my username instead of root, so I added some options to each rule.
```
.host:/Documents    /home/wanglij/Documents vmhgfs  defaults,uid=1000,dmask=022,fmask=022,user  0 0
.host:/P4       /home/wanglij/P4    vmhgfs  defaults,uid=1000,dmask=022,fmask=022,user  0 0
```
4. Reboot ArchLinux
Now all the shared folders should be mounted to your linux directories automatically when you guest ArchLinux is boot up.

### Mount vmblock fuse manually
The issue here is that it gives the following error when I run vmware-user-suid-wrapper command.
```
[wanglij@~]$ vmware-user-suid-wrapper
vmware-user: could not open /proc/fs/vmblock/dev
```
This is because vmblock was not mounted. To fix this problem, run:
```
[wanglij@~]$ sudo mkdir /var/run/vmblock-fuse
[wanglij@~]$ sudo vmware-vmblock-fuse -o subtype=vmware-vmblock,default_permissions,allow_other /var/run/vmblock-fuse
```
